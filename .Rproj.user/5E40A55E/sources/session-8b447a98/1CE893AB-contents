##Start Here!
#source("ParentFunction.R")
#source("Clean_child_functions.R")
load("~/absets.rdata") ##This is one of the tissue datasets used to generate the M-values

get_power(dm=100, ## Number of significant cpg sites
          Total=100000, ##Total number of tested sites
          n=c(10,20,30,40,50,60,70), ##Sample sizes to be tested (this is the only parameter that can take multiple inputs)
          fdr=.05, ##false discovery rate - currently, the only adjustment you can do is the benjamini-Hochberg
          rho_mu=c(.5,.6,.7), ##mean of the rho distribution
          rho_sd=0, ##sd of the rho distribution (if 0, this means that all correlations are rho_mu)
          MOE=.03, ##Target margin of error of a 95% confidence interval for the average power across all tested datasets
          Nmax=1000, ##The maximum number of datasets tested (for each individual sample size)
          test="pearson" ##What type of test. Can be pearson, kendall or spearman
          ) -> sample_results

sample_results

##One other thing to note: the algorithm will run until either the standard error is small enough to achieve the
##desired MOE or the number of datasets reaches Nmax. In my mind, this is more intuitive than asking researchers
##to specify the exact N up front.

##And then we can plot the data with something like this:
x <- sample_results$sample_size
y <- sample_results$avg_power
moe <- 1.96*sample_results$sd_power/sqrt(sample_results$N)

x11() ## <- replace with your desired plotting window (or just remove it)

plot(x,y,type="n",ylim=c(0,1),
     xlab="Sample Size",ylab="Average Power (95% confidence interval)", main="Power Curve for EWAS")
for(r in length(unique(sample_results$rho_mu))){
  arrows(x, y+moe, x, y-moe, angle=90, code=3, length=0.06, col="blue")
}


